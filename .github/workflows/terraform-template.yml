name: Reusable Terraform Workflow

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: "Environment name (e.g., prod, staging)"
      working_directory:
        required: true
        type: string
        description: "Directory containing Terraform files"
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true

jobs:
  terraform-fmt:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform fmt check
        id: fmt
        run: terraform fmt -check -recursive ${{ inputs.working_directory }}
        continue-on-error: false

  terraform-plan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        working-directory: ${{ inputs.working_directory }}
        run: terraform init

      - name: Terraform Plan
        working-directory: ${{ inputs.working_directory }}
        env:
          TF_VAR_PROJECTSPRINT_VM_PUBLIC_KEY: ${{ secrets.TF_VAR_PROJECTSPRINT_VM_PUBLIC_KEY }}
        run: |
          # Debug: Check if variable is set (will show "set" or "unset")
          if [ -n "$TF_VAR_PROJECTSPRINT_VM_PUBLIC_KEY" ]; then
            echo "TF_VAR_PROJECTSPRINT_VM_PUBLIC_KEY is set"
            # Print first few characters to verify content without exposing full key
            echo "Key starts with: ${TF_VAR_PROJECTSPRINT_VM_PUBLIC_KEY:0:10}..."
          else
            echo "TF_VAR_PROJECTSPRINT_VM_PUBLIC_KEY is unset"
          fi
          terraform plan -no-color
        continue-on-error: false

  terraform-apply:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    needs: terraform-plan
    steps:
      - uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        working-directory: ${{ inputs.working_directory }}
        run: terraform init

      - name: Terraform Apply
        working-directory: ${{ inputs.working_directory }}
        env:
          TF_VAR_PROJECTSPRINT_VM_PUBLIC_KEY: ${{ secrets.TF_VAR_PROJECTSPRINT_VM_PUBLIC_KEY }}
        run: terraform apply -auto-approve -no-color
